#!/usr/bin/comet
import 'module' as Module

class MyClass : SomeOtherClass
{
    init(a)
    {
        self.a = a
        self.list = []
        self.hash = {}
        self.set = Set()
    }

    this_is_a_method()
    {
        print("interpolated string ${self.a}")
        print('literal string')
    }

    this_is_a_different_method(a, b=1, c=nil)
    {
        while (expression)
        {
            self.my_iterative_method((|something|) {
                print(something)
            })
        }
    }

    this_method_is_destructive!()
    {

    }

    this_method_returns_a_bool?()
    {
        return false
    }

    operator [] (arg)
    {
        print('This overloads how the operator identifier[1] will function')
    }

    my_iterative_method(func)
    {
        foreach(var item in self.list)
        {
            func(item)
        }
    }
}