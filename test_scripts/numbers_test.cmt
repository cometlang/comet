assert(1 + 1 == 2)
assert(4 / 2 == 2)
assert(1 * 2 == 2)
assert(4 - 2 == 2)
assert(6 % 4 == 2)

assert(2_000_000 == 2000000)

assert(3 < 4)
assert(3 <= 3)
assert(4 > 3)
assert(4 >= 3)
assert(0 == 0)

assert(Number.parse("3") is Number, 'parsed number should be a number')
assert(Number.parse("three").nil?(), "String that can't parse into a number, should be nil")

var num = Number.parse('6')
assert(num < 8)

assert(0xff == 255)

assert(3 & 2 == 2)
assert(3 ^ 1 == 2)
assert(2 | 1 == 3)
assert(2 << 1 == 4)
assert(2 >> 1 == 1)

assert(2.power(2) == 4)
assert(4.square_root() == 2)
assert(4.even?())
assert(!3.even?())

assert(Number.min(Number.random(), 0) == 0)
assert(Number.max(Number.random(), 1) == 1)

print((-42).absolute_value())
assert((-42).absolute_value() == 42)

print("Numbers test passed!")